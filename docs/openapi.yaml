openapi: "3.0.0"
info:
  version: 1.0.0
  title: HeadlessWC
paths:
  /wp-json/headless-wc/v1/cart:
    post:
      summary: Update the shopping cart
      description: Adds items to the shopping cart and applies a coupon code.
      tags:
        - Cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cart:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 15
                      quantity:
                        type: integer
                        example: 1
                couponCode:
                  type: string
                  example: GRILL
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  products:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 15
                        name:
                          type: string
                          example: "Karty NIE MASZ PSYCHY"
                        img:
                          type: string
                          example: "https://sklep.niemaszpsychy.com/wp-content/uploads/2024/01/produkt.png"
                        fullImg:
                          type: string
                          example: "https://sklep.niemaszpsychy.com/wp-content/uploads/2024/01/produkt.png"
                        quantity:
                          type: integer
                          example: 1
                        price:
                          type: number
                          format: float
                          example: 89.99
                        regularPrice:
                          type: number
                          format: float
                          example: 89.99
                        salePrice:
                          type: number
                          format: float
                          example: 89.99
                        isOnsale:
                          type: boolean
                          example: false
                        total:
                          type: number
                          format: float
                          example: 71.99
                        tax:
                          type: number
                          format: float
                          example: 0
                  subtotal:
                    type: number
                    format: float
                    example: 89.99
                  total:
                    type: number
                    format: float
                    example: 88.98
                  taxTotal:
                    type: number
                    format: float
                    example: 0
                  shippingTotal:
                    type: number
                    format: float
                    example: 16.99
                  discountTotal:
                    type: number
                    format: float
                    example: 18
                  couponCode:
                    type: string
                    example: "GRILL"
                  currency:
                    type: string
                    example: "PLN"
                  availableShippingMethods:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        id:
                          type: string
                        price:
                          type: number
                          format: float
                          example: 16.99
                        tax:
                          type: number
                          format: float
                          example: 0
                        zone:
                          type: string
                          example: "Polska"
                        locations:
                          type: array
                          items:
                            type: object
                            properties:
                              type:
                                type: string
                                example: "country"
                              code:
                                type: string
                                example: "PL"
                  availablePaymentMethods:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        title:
                          type: string
                        description:
                          type: string
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: A paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pets"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a pet
      operationId: createPets
      tags:
        - pets
      responses:
        "201":
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
